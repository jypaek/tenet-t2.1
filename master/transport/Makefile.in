SHELL = /bin/sh
VPATH = @srcdir@

subdirs = @subdirs@
top_srcdir = @top_srcdir@
srcdir = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = $(exec_prefix)/bin
infodir = $(prefix)/info
libdir = $(prefix)/lib/gnudl
mandir = $(prefix)/man/man1

CC = @CC@
CXX = @CXX@
CPPFLAGS = @CPPFLAGS@
#CFLAGS = $(CPPFLAGS) @CFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
INSTALL = @INSTALL@

TR_TARGET     = transport  # default binary name

TENETPATH = ../..
MASTERPATH = ..

INCPATH = $(MASTERPATH)/include
SFPATH = $(TENETPATH)/tools/sf

TRDPATH = $(MASTERPATH)/trd
LIBPATH = $(MASTERPATH)/tasklib
MOTELIB = $(TENETPATH)/mote/lib
MOTETRDPATH = $(MOTELIB)/trd
MOTEROUTERPATH = $(MOTELIB)/router
MOTETRANSPORTPATH = $(MOTELIB)/transport
BASESTATIONPATH = $(MOTELIB)/../apps/BaseStation


# main
TR_SRC = transportmain.c    # main
# various mote-to-master transport layer protocols
TR_SRC += packettransport.c streamtransport.c rcrtransport.c
# data structures (client-app, tid-list, packet-list, etc)
TR_SRC += client.c tidlist.c connectionlist.c sortedpacketlist.c uint16list.c 
# interfaces to other layers (app, routing, etc)
TR_SRC += tr_if.c service_if.c routinglayer.c 
# special services
TR_SRC += tcmp.c service.c multihoplqibase.c
# misc
TR_SRC += $(INCPATH)/timeval.c $(INCPATH)/tosmsg.c $(SFPATH)/sfsource.c
# trd (master)
TR_SRC += $(TRDPATH)/trd.c $(TRDPATH)/trd_state.c \
          $(TRDPATH)/trd_timer.c $(TRDPATH)/trd_memory.c \
          $(TRDPATH)/trd_transport.c $(TRDPATH)/trd_fragment.c
# trd (mote&master)
TR_SRC += $(MOTETRDPATH)/trd_metalist.c $(MOTETRDPATH)/trd_nodecache.c \
          $(MOTETRDPATH)/trd_seqno.c $(MOTETRDPATH)/trd_table.c
# transport layer misc
TR_SRC += $(MOTETRANSPORTPATH)/tr_checksum.c $(MOTETRANSPORTPATH)/tr_packet.c \
          $(MOTETRANSPORTPATH)/tr_seqno.c


include $(INCPATH)/Makerules


CFLAGS += -g -Wall
CFLAGS += -I$(INCPATH) -I$(SFPATH) -I$(MOTELIB) -I$(LIBPATH) 
CFLAGS += -I$(TRDPATH) -I$(MOTETRDPATH) -I$(MOTEROUTERPATH) -I$(MOTETRANSPORTPATH)
CFLAGS += -I$(BASESTATIONPATH)


# default is not to compile for arm.
all: $(TR_TARGET)

# default compilation
transport: $(TR_SRC)
	$(CC) -O1 $(CFLAGS) $^ -o $@ 

clean:
	rm -f $(TR_TARGET) 
	rm -f *.o


